services:
  nextn-app:
    build:
      context: .
      dockerfile: Dockerfile
      # Optimizaciones de build para Node.js 22
      cache_from:
        - node:22-alpine
      args:
        BUILDKIT_INLINE_CACHE: 1
        NODE_VERSION: "22"
    container_name: nextn-container
    
    # Configuración de recursos optimizada para VPS
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    
    ports:
      - "9002:9002"
    
    environment:
      - NODE_ENV=production
      - PORT=9002
      - HOSTNAME=0.0.0.0
      - NODE_VERSION=22
      - NEXT_TELEMETRY_DISABLED=1
      # Descomenta y configura estas variables para tu VPS
      # - SUPABASE_URL=${SUPABASE_URL}
      # - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
    
    volumes:
      - ./logs:/app/logs:rw
      # Cache de npm para builds más rápidos con Node.js 22
      - npm-cache:/root/.npm
      # Cache de Next.js para builds incrementales
      - next-cache:/app/.next/cache
    
    restart: unless-stopped
    
    # Health check optimizado para Node.js 22
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:9002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Configuración de logging optimizada
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    
    networks:
      - nextn-network

networks:
  nextn-network:
    driver: bridge
    # Configuración de red optimizada
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  npm-cache:
    driver: local
  next-cache:
    driver: local